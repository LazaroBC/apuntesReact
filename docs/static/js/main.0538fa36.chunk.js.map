{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","propTypes","PropTypes","func","isRequired","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iPAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OAEI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uCCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCDPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAGGqB,EDlB2BK,CAAa1B,GAAjCa,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAEtB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,YAEX,yBAAKA,UAAU,aAEXH,EAAOJ,KAAI,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEuB5B1B,EAAY4C,UAAY,CACpB3C,cAAe4C,IAAUC,KAAKC,YAInBC,MA1CM,WAAO,IAAD,EAEa9C,mBAAS,CAAC,YAFvB,mBAEhB+C,EAFgB,KAEJhD,EAFI,KASvB,OAEI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQgD,EAAWxB,KAAI,SAAAT,GAAQ,OAEnB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,UCrBtCkC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0538fa36.chunk.js","sourcesContent":["import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        if (inputValue.trim().length>2){\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n    return (\n\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n\n    )\n}\n\n\n// AddCategory.PropTypes = {\n//     setCategories: PropTypes.func.isRequired\n// }","\n\n\nexport const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=MoW74JPvm1qHBhUvcNy2Y9ZCmiEDJ72F`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    \n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n\n    \n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n            {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\n\n            {<div className=\"card-grid\">\n\n                {images.map(img => (\n                    <GifGridItem\n                        key={img.id}\n                        {...img}\n                    />\n                ))}\n\n            </div>}\n        </>\n    )\n}\n\n","import { useState, useEffect } from 'react';\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs => {\n\n                setstate({\n                    data: imgs,\n                    loading: false\n                });\n\n            });\n    }, [category]);\n\n\n    return state; // {data:[], loading: true}\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\n// Para obligar a poner los componentes en <AddCategory />\nimport PropTypes from 'prop-types'\nimport { GifGrid } from './components/GifGrid'\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Samurai']);\n\n    // const handleAdd = () => {\n    //     setCategories(['1ºHunterXHunter', ...categories, '2ºHunterXHunter']);\n    //     // setCategories(cats=>[...cats,'NuevoPersonaje']);\n    // }\n\n    return (\n\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            <ol>\n                {\n                    categories.map(category => (\n\n                        <GifGrid\n                            key={category}\n                            category={category} />\n                    ))\n                }\n            </ol>\n\n\n\n        </>\n    )\n\n\n\n}\n\n// Para obligar a poner los componentes en <AddCategory />\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n// GifExpertApp\n// <h2>GifExpertApp</h2>\n// <hr />\n\n"],"sourceRoot":""}